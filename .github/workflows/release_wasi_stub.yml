name: Release wasi-stub

# Trigger whenever a tag is created/updated

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: install ninja (macos)
        run: brew install ninja
        if: matrix.os == 'macos-latest'

      - name: install ninja (win)
        run: choco install ninja
        if: matrix.os == 'windows-latest'

      - name: mkdir
        run: mkdir -p out

      - name: cmake (macos)
        run: |
          cmake -S . -B out -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=out/install -DCMAKE_OSX_ARCHITECTURES=x86_64
          cmake -S . -B out-arm64 -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=out/install -DCMAKE_OSX_ARCHITECTURES=arm64
        if: matrix.os == 'macos-latest'

      - name: cmake (win)
        run: cmake -S . -B out -G Ninja -DCMAKE_CXX_FLAGS="-static" -DCMAKE_C_FLAGS="-static" -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC_LIB=ON 
        if: matrix.os == 'windows-latest'

      - name: build
        run: cmake --build out -v --target wasi-stub

      - name: build-arm64
        run: cmake --build out-arm64 -v --target wasi-stub
        if: matrix.os == 'macos-latest'

      - name: strip
        run: find out*/install/ -type f -perm -u=x -exec strip -x {} +
        if: matrix.os != 'windows-latest'

      - name: prepare-windows
        id: prepare-windows
        run: |
          OSNAME=$(echo ${{ matrix.os }} | sed 's/-latest//')
          VERSION=$GITHUB_REF_NAME
          PKGNAME="wasi-stub-$VERSION-x86_64-$OSNAME.exe"
          SHASUM=$PKGNAME.sha256
          strip out/bin/wasi-stub.exe
          mv out/bin/wasi-stub.exe $PKGNAME
          cmake -E sha256sum $PKGNAME > $SHASUM
          echo "::set-output name=ws::$PKGNAME"
          echo "::set-output name=shasum::$SHASUM"
        if: matrix.os == 'windows-latest'

      - name: prepare-mac-x86
        id: prepare-mac-x86
        run: |
          OSNAME=$(echo ${{ matrix.os }} | sed 's/-latest//')
          VERSION=$GITHUB_REF_NAME
          PKGNAME="wasi-stub-$VERSION-x86_64-$OSNAME"
          SHASUM=$PKGNAME.sha256
          strip out/bin/wasi-stub
          mv out/bin/wasi-stub $PKGNAME
          chmod 777 $PKGNAME
          cmake -E sha256sum $PKGNAME > $SHASUM
          echo "::set-output name=ws::$PKGNAME"
          echo "::set-output name=shasum::$SHASUM"
        if: matrix.os == 'macos-latest'

      - name: prepare-mac-arm64
        id: prepare-mac-arm64
        run: |
          OSNAME=$(echo ${{ matrix.os }} | sed 's/-latest//')
          VERSION=$GITHUB_REF_NAME
          PKGNAME="wasi-stub-$VERSION-x86_64-$OSNAME"
          SHASUM=$PKGNAME.sha256
          strip out-arm64/bin/wasi-stub
          mv out-arm64/bin/wasi-stub $PKGNAME
          chmod 777 $PKGNAME
          cmake -E sha256sum $PKGNAME > $SHASUM
          echo "::set-output name=ws::$PKGNAME"
          echo "::set-output name=shasum::$SHASUM"
        if: matrix.os == 'macos-latest'

      - name: upload wasi-stub
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            ${{ steps.prepare-windows.outputs.ws }}
            ${{ steps.prepare-windows.outputs.shasum }}
            ${{ steps.prepare-mac-x86.outputs.ws }}
            ${{ steps.prepare-mac-x86.outputs.shasum }}
            ${{ steps.prepare-mac-arm64.outputs.ws }}
            ${{ steps.prepare-mac-arm64.outputs.shasum }}

  # Build with gcc 6.3 and run tests on Alpine Linux (inside chroot).
  # Note: Alpine uses musl libc.
  build-alpine:
    name: alpine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1
        with:
          python-version: "3.x"
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: start docker
        run: |
          docker run -w /src -dit --name alpine -v $PWD:/src node:lts-alpine
          echo 'docker exec alpine "$@";' > ./alpine.sh
          chmod +x ./alpine.sh

      - name: install packages
        run: |
          ./alpine.sh apk update
          ./alpine.sh apk add build-base cmake git python3 clang ninja py3-pip

      - name: install python dev dependencies
        run: ./alpine.sh pip3 install -r requirements-dev.txt

      - name: cmake
        run: |
          ./alpine.sh cmake -S . -B out -G Ninja -DCMAKE_CXX_FLAGS="-static" -DCMAKE_C_FLAGS="-static" -DCMAKE_BUILD_TYPE=Release -DBUILD_STATIC_LIB=ON

      - name: build
        run: |
          ./alpine.sh cmake --build out -v --target wasi-stub

      - name: prepare
        id: prepare
        run: |
          VERSION=$GITHUB_REF_NAME
          PKGNAME="wasi-stub-$VERSION-x86_64-linux"
          SHASUM=$PKGNAME.sha256
          ./alpine.sh strip out/bin/wasi-stub
          ./alpine.sh mv out/bin/wasi-stub $PKGNAME
          ./alpine.sh chmod 777 $PKGNAME
          cmake -E sha256sum $PKGNAME > $SHASUM
          echo "::set-output name=ws::$PKGNAME"
          echo "::set-output name=shasum::$SHASUM"

      - name: upload wasi-stub
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            ${{ steps.prepare.outputs.ws }}
            ${{ steps.prepare.outputs.shasum }}
